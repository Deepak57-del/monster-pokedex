{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/Search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","Cardlist","map","monster","SearchBox","placeholder","handlechange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filterMonster","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yTAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,cAAcC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BAC1B,6BAAKL,EAAMI,SAASE,OACpB,4BAAIN,EAAMI,SAASG,YCJdC,G,MAAW,SAACR,GACrB,OAAQ,qBAAKC,UAAU,YAAf,SACCD,EAAMI,SAASK,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CAAuBN,SAAUM,GAAtBA,EAAQL,WCFlBM,G,MAAY,SAAC,GAAD,IAAIC,EAAJ,EAAIA,YAAYC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOC,KAAK,SAASb,UAAU,SAASW,YAAaA,EAAaG,SAAUF,MCuBjEG,E,kDAvBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXP,QAAS,GACTQ,YAAa,IAJH,E,qDAOd,WAAoB,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEd,QAAQa,S,oBAE9H,WAAU,IAAD,OACP,EAAgCE,KAAKR,MAA7BP,EAAR,EAAQA,QAAQQ,EAAhB,EAAgBA,YACVQ,EAAgBhB,EAAQiB,QAAQ,SAAAjB,GAAO,OAC3CA,EAAQJ,KAAKsB,cAAcC,SAASX,EAAYU,kBAClD,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAc,SAACiB,GAAM,EAAKN,SAAS,CAAEN,YAAYY,EAAEC,OAAOC,WACnG,cAAC,EAAD,CAAU5B,SAAUsB,W,GAnBVO,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAEhDX,M","file":"static/js/main.e27cf269.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.component.css';\r\nexport const Card = (props)=>(\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster.jpg\" src={`https://robohash.org/${props.monsters.id}?set=set3&size=180x180`} />\r\n        <h2>{props.monsters.name}</h2>\r\n        <p>{props.monsters.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\nexport const Cardlist = (props)=>{\r\n    return (<div className=\"card-list\">\r\n            {props.monsters.map((monster)=>(\r\n            <Card key={monster.id} monsters={monster}/>\r\n        ))}\r\n    </div>)\r\n}","import React from 'react';\r\n\r\nimport '../Search-box/search-box.style.css'\r\n\r\nexport const SearchBox = ( { placeholder,handlechange } )=>(\r\n    <input type='search' className=\"search\" placeholder={placeholder} onChange={handlechange}/>\r\n)","import React from 'react'\nimport './App.css';\nimport { Cardlist } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/Search-box/search-box.component'\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monster: [],\n      searchField :''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({ monster:users }))\n  }\n  render() {\n    const { monster,searchField } = this.state;\n    const filterMonster = monster.filter( monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monsters Pokedex</h1>\n        <SearchBox placeholder=\"search monsters\" handlechange={(e)=> {this.setState({ searchField:e.target.value })}}/>\n        <Cardlist monsters={filterMonster} />\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}